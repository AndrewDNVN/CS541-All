rm -f Yylex.java
jflex csx_go.jlex
Reading "csx_go.jlex"
Constructing NFA : 391 states in NFA
Converting NFA to DFA : 
.....................................................................................................................................
135 states before minimization, 120 states in minimized DFA
Writing code to "Yylex.java"
javac -Xlint:all,-auxiliaryclass,-rawtypes -deprecation -classpath ./classes:/home/andrew/Documents/cup/java-cup-10k.jar -d ./classes sym.java
javac -Xlint:all,-auxiliaryclass,-rawtypes -deprecation -classpath ./classes:/home/andrew/Documents/cup/java-cup-10k.jar -d ./classes Yylex.java
javac -Xlint:all,-auxiliaryclass,-rawtypes -deprecation -classpath ./classes:/home/andrew/Documents/cup/java-cup-10k.jar -d ./classes P2.java
java -classpath ./classes:/home/andrew/Documents/cup/java-cup-10k.jar P2 csx_lite
Begin test of CSX scanner.
10:4	ID (This)
10:9	ID (should)
10:16	Reserved (print)
10:22	ID (at)
10:25	ID (line)
10:30	Integer literal(10)
10:33	ID (last)
10:38	ID (col)
10:42	ID (number)
10:49	ID (should)
10:56	ID (be)
10:59	Integer literal(59)
14:3	Symbol (()
14:4	Symbol ())
14:6	Symbol ([)
14:7	Symbol (])
14:9	Symbol (=)
14:11	Symbol (;)
14:13	Symbol (+)
14:15	Symbol (-)
14:17	Symbol (*)
14:19	Symbol (/)
14:21	Symbol (==)
14:24	Symbol (!=)
14:27	Symbol (&&)
14:30	Symbol (||)
14:33	Symbol (>)
14:34	Symbol (<)
14:36	Symbol (<=)
14:39	Symbol (>=)
14:42	Symbol (,)
14:44	Symbol (!)
14:46	Symbol ({)
14:47	Symbol (})
14:49	Symbol (:)
16:1	Reserved (bool)
16:6	Reserved (break)
16:12	Reserved (char)
16:17	Reserved (const)
16:23	Reserved (continue)
16:32	Reserved (else)
16:37	Reserved (for)
16:41	Reserved (func)
16:46	Reserved (if)
16:49	Reserved (int)
16:53	Reserved (package)
16:61	Reserved (print)
16:67	Reserved (read)
16:72	Reserved (return)
16:79	Reserved (var)
18:1	Reserved (bool)
18:6	Reserved (break)
18:12	Reserved (char)
18:17	Reserved (const)
18:23	Reserved (continue)
18:32	Reserved (else)
18:37	Reserved (for)
18:41	Reserved (func)
18:46	Reserved (if)
18:49	Reserved (int)
18:53	Reserved (package)
18:61	Reserved (print)
18:67	Reserved (read)
18:72	Reserved (return)
18:79	Reserved (var)
20:1	Reserved (bool)
20:6	Reserved (break)
20:12	Reserved (char)
20:17	Reserved (const)
20:23	Reserved (continue)
20:32	Reserved (else)
20:37	Reserved (for)
20:41	Reserved (func)
20:46	Reserved (if)
20:49	Reserved (int)
20:53	Reserved (package)
20:61	Reserved (print)
20:67	Reserved (read)
20:72	Reserved (return)
20:79	Reserved (var)
22:1	Boolean Literal (true)
22:6	Boolean Literal (false)
24:1	Boolean Literal (true)
24:6	Boolean Literal (false)
26:1	Boolean Literal (true)
26:6	Boolean Literal (false)
28:1	ID (This)
28:6	ID (is)
28:9	ID (a)
28:11	ID (set)
28:15	ID (of)
28:18	ID (ID)
28:21	ID (of)
28:24	ID (Letters)
30:1	ID (ID_of)
30:7	ID (Letters_And)
30:19	ID (Underscores____)
32:1	ID (ID_33_of_Numbers_UnderScores_and_Letters)
32:42	ID (A_34)
32:47	ID (B_45)
41:1	Integer literal(1)
41:3	Integer literal(2)
41:5	Integer literal(3)
43:1	Integer literal(-1)
43:4	Integer literal(-2)
43:7	Integer literal(-3)
45:1	Symbol (-)
45:2	Integer literal(1)
45:4	Symbol (-)
45:5	Integer literal(2)
45:7	Symbol (-)
45:8	Integer literal(3)
47:1	Integer literal(1000)
47:6	Integer literal(2000)
47:11	Integer literal(3000)
49:1	Integer literal(-1000)
49:7	Integer literal(-2000)
49:13	Integer literal(-3000)
51:1	Integer literal(2147483647)
53:1	Integer literal(-2147483648)
57:1	Integer Literal Max Size error set to Integer Max (2147483647)
59:1	Integer Literal Minimum Size error set to Integer Minimum (-2147483648)
61:1	Integer Literal Minimum Size error set to Integer Minimum (-2147483648)
63:1	Integer Literal Max Size error set to Integer Max (2147483647)
65:1	Integer Literal Max Size error set to Integer Max (2147483647)
67:1	Integer Literal Minimum Size error set to Integer Minimum (-2147483648)
71:1	String literal("This is one small string.")
73:1	String literal("  \\  \\t \\n")
75:1	String literal(" This quote is still in the string \" ")
77:1	String literal(" This tic is still in the string \' ")
79:1	Illegal String Error (" \x")
81:31	Unclosed String Error (" 1  // Unclosed String Error)
85:1	Char literal(a)
85:5	Char literal(b)
85:9	Char literal(1)
85:13	Char literal(3)
85:17	Char literal(&)
87:1	Char literal(\t)
88:2	Char literal(\n)
89:2	Char literal(')
90:2	Char literal(\)
92:1	Illegal Char Error ('\x')
93:2	Illegal Char Error ('\"')
94:1	Illegal Char Error ('\\t')
96:1	Unclosed Char Error (' this is an unclosed char error)
98:1	Unrecognized Symbol(^)
98:2	Unrecognized Symbol(@)
98:3	Unrecognized Symbol(#)
98:4	Unrecognized Symbol($)
98:5	Unrecognized Symbol(@)
98:6	Unrecognized Symbol(#)
98:7	Unrecognized Symbol($)
98:8	Unrecognized Symbol(%)
98:9	Unrecognized Symbol(@)
98:10	Unrecognized Symbol(%)
98:11	Unrecognized Symbol($)
98:12	Unrecognized Symbol(#)
98:13	Unrecognized Symbol(%)
98:14	Unrecognized Symbol(@)
98:15	Unrecognized Symbol(#)
98:16	Unrecognized Symbol($)
98:17	Unrecognized Symbol(%)
100:1	ID (END_ON_LINE_100_COL_1)
End test of CSX scanner.
